library("xgboost")
library('gWQS')
library('MASS')
library("car")
library("mvtnorm")
library("dplyr")
library('doMC')
library('doParallel')
library("gbm")
library("iRF")
library('mice')
library('ggplot2')

# Import Targeted data

targetted_data <- read.csv("....\\1461_TARGETED_DATA.csv")
targetted_data$analyte_code[targetted_data$analyte_code == "TCP24" & targetted_data$LOD == 0.1] <- "TCP245"
targetted_data$analyte_code[targetted_data$analyte_code == "TCP24" & targetted_data$LOD == 0.02] <- "TCP246"
targetted_data$CHILD_PID <- as.character(targetted_data$CHILD_PID)

# Getting rid of PFAS analytes

targetted_data <- targetted_data[!(targetted_data$analyte_code %in% c('NETFOSAA', 'NMFOSAA', 'PFBS', 'PFDA', 'PFDODA', 'PFHPA', 'PFHXA', 'PFHXS', 'PFNA', 'PFOA', 'PFOS',  'PFOSA', 'PFPEA', 'PFUNDA')),]

# Adjusting for Specific Gravity

targetted_data$cf <- (1.0223 - 1)/(targetted_data$SG_avg - 1)
for(i in 1:nrow(targetted_data)){
  if(targetted_data$cf[i] <= 0.5){targetted_data$cf[i] = 0.5}
  else if (targetted_data$cf[i] >= 2){targetted_data$cf[i] = 2}
}

# Imputing the below LOD values by LOD/2

for(i in 1:nrow(targetted_data)){
  if(targetted_data$comment_code[i] == 37){
    targetted_data$concentration[i] = targetted_data$LOD[i]/2
  }
}

targetted_data$sgc_concentration <- targetted_data$cf*targetted_data$concentration

# Log (base = 2) transformation of concentrations

targetted_data$sgc_log_concentration <- (log(targetted_data$sgc_concentration, 2))

# Histogram of the specific gravity and log transformed concentration  

hist(targetted_data$sgc_log_concentration)


# Converting the data from Long to Wide format

concen <- as.data.frame(reshape(targetted_data[,c("CHILD_PID","analyte_code","sgc_log_concentration","sample_collection_year")], 
                                idvar = c("CHILD_PID","sample_collection_year"), 
                                timevar = "analyte_code", direction = "wide"))

df <- unlist(strsplit(colnames(concen)[c(-1,-2)],"sgc_log_concentration."))
colnames(concen) <- c("CHILD_PID","sample_collection_year",df[df != ""])


# Importing the Epi data

epi <- read.csv("....\\1461_EPI_DATA.csv")
d <- merge(epi, concen, by = "CHILD_PID")
df <- d[,colnames(d) %in% c(colnames(concen),"correctsex","YOB","ChildAgeMos","ChildRace_3cat","OwnHome","MMC_4cat","AgeMomYrs","dx2_group")]
colnames(df)[3] <- "csex"
colnames(df)[4] <- "crace"
colnames(df)[5] <- "cage"
df$cage <- df$cage/12
df$YOB <- df$YOB - 2000

# Imputing some missing covariates using MICE

init = mice(df[!(colnames(df) %in% c("CHILD_PID","dx2_group"))], maxit=0)
meth = init$method
predM = init$predictorMatrix
set.seed(1234)
imputed = mice(df[!(colnames(df) %in% c("CHILD_PID","dx2_group"))], method="pmm", predictorMatrix=predM, m=3, ntree = 100)
imputed <- complete(imputed, action = 3) # this is your final imputed dataset

finaldf <- df
finaldf$crace <- as.character(imputed$crace)
finaldf$MMC_4cat <- as.character(imputed$MMC_4cat)
finaldf$OwnHome <- as.character(imputed$OwnHome)

finaldf$DD <- df$dx2_group
finaldf <- finaldf[finaldf$DD ==5 | finaldf$DD == 3,]
finaldf$DD <- ifelse(finaldf$DD == 3, 1, 0)

############################################################################################################################################################################################

gg <- gwqs(DD ~ wqs + csex + crace + cage + YOB + OwnHome + MMC_4cat + AgeMomYrs,
             mix_name = exposures, data = finaldf, q = 10, signal = "t2",
             b = 250, rs = T,   n_vars = 12,  validation = 0, 
             seed = 123123123, 
             b1_pos = T,  family = "binomial",plan_strategy = "multicore")

finaldf$wqs <- gg$wqs
fit <- glm(DD ~ wqs + csex + crace + cage + YOB + OwnHome + MMC_4cat + AgeMomYrs, data = finaldf, family = "binomial")
finaldf$resid <-  resid(fit, type="pearson")

###########################################################################################################################################################################################

## 75 training  and 25 testing

set.seed(123456)
train.id <- sample(seq(1,n), ceiling(n*75/100))
test.id <- setdiff(1:n, train.id)

set.seed(123456)
fit <- iRF(x=finaldf[train.id, exposures], 
           y=finaldf[train.id,"resid"], 
           xtest=finaldf[test.id, exposures],
           ytest=finaldf[test.id,"resid"],
           n.iter=10, 
           n.core=3,
           select.iter = T,
           n.bootstrap=250
)

dypt <- as.data.frame(fit$interaction[fit$interaction$stability > 0.5,])
dypt$synergy <- rep(NA_real_,nrow(dypt))
for(i in 1:nrow(dypt)) dypt$synergy[i] <- sum( strsplit(dypt$int,"+")[[i]] %in% "-")
(a <- dypt[dypt$synergy == 0,])

# [1] int        prevalence precision  cpe        sta.cpe    fsd
# [7] sta.fsd    mip        sta.mip    stability  synergy
# <0 rows> (or 0-length row.names)


## 80 training  and 20 testing

set.seed(123456)
train.id <- sample(seq(1,n), ceiling(n*80/100))
test.id <- setdiff(1:n, train.id)

set.seed(123456)
fit <- iRF(x=finaldf[train.id, exposures], 
           y=finaldf[train.id,"resid"], 
           xtest=finaldf[test.id, exposures],
           ytest=finaldf[test.id,"resid"],
           n.iter=10, 
           n.core=3,
           select.iter = T,
           n.bootstrap=250
)

dypt <- as.data.frame(fit$interaction[fit$interaction$stability > 0.5,])
dypt$synergy <- rep(NA_real_,nrow(dypt))
for(i in 1:nrow(dypt)) dypt$synergy[i] <- sum( strsplit(dypt$int,"+")[[i]] %in% "-")
(b <- dypt[dypt$synergy == 0,])

# int prevalence precision         cpe sta.cpe        fsd sta.fsd
# 5 BP3+_MCMHP+ 0.08019963 0.4759951 -0.01326013       0 0.01364038   0.996
# mip sta.mip stability synergy
# 5 -0.02542993       0     0.544       0


## 70 training  and 30 testing

set.seed(123456)
train.id <- sample(seq(1,n), ceiling(n*70/100))
test.id <- setdiff(1:n, train.id)

table(finaldf[train.id,"DD"])
table(finaldf[test.id,"DD"])

set.seed(123456)
fit <- iRF(x=finaldf[train.id, exposures], 
           y=finaldf[train.id,"resid"], 
           xtest=finaldf[test.id, exposures],
           ytest=finaldf[test.id,"resid"],
           # xtest=finaldf[, exposures], 
           # ytest=finaldf[,"resid"], 
           n.iter=10, 
           n.core=3,
           select.iter = T,
           n.bootstrap=250
)

dypt <- as.data.frame(fit$interaction[fit$interaction$stability > 0.5,])
dypt$synergy <- rep(NA_real_,nrow(dypt))
for(i in 1:nrow(dypt)) dypt$synergy[i] <- sum( strsplit(dypt$int,"+")[[i]] %in% "-")
(c<- dypt[dypt$synergy == 0,])

# int prevalence precision          cpe sta.cpe        fsd sta.fsd
# 7 BP3+_DCP25+ 0.08078288 0.5062380 -0.005791686   0.056 0.01751451       1
# 9   BP3+_MEP+ 0.07641010 0.5007765 -0.007224720   0.008 0.01179003       1
# mip sta.mip stability synergy
# 7 -0.016888504   0.016     0.544       0
# 9 -0.007702668   0.180     0.564       0

##################################################################################################################################################################################################################

intersect(intersect(a$int, b$int), c$int)


